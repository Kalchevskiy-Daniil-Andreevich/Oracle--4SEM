SET SERVEROUTPUT ON;

--1
BEGIN

NULL;

END;

--2
BEGIN

DBMS_OUTPUT.PUT_LINE('Hello world'); 

END;

--3
SELECT KEYWORD FROM V_$RESERVED_WORDS
WHERE LENGTH = 1 AND KEYWORD != 'A'

--4
SELECT KEYWORD FROM V_$RESERVED_WORDS
WHERE LENGTH > 1 AND KEYWORD != 'A' ORDER BY KEYWORD

--5
DECLARE 
    NUM1 NUMBER := 3;
    NUM2 NUMBER := 5;
    RESULT NUMBER;
    MOD_RESULT NUMBER;
    
    NUM3 NUMBER(4, 2) := 10.50;
    NUM4 NUMBER(3, 2) := 3.14;
    
    NUM5 NUMBER(6, -10) := 3.14159;
    NUM6 NUMBER(8, -2) := 1234.5678;
    
    NUM7 NUMBER(20, 12) := 1.23E+3;
    NUM8 NUMBER(20, 12) := 4.56E-2;
    
    NUM9 DATE:= SYSDATE;
    NUM10 DATE:= TO_DATE('02.12.2001', 'DD.MM.YYYY');
   
    NUM11 VARCHAR2(20):= 'CDB';
    NUM12 CHAR(10):= 'PDB';
    
    BOOL1 BOOLEAN:= TRUE;
    BOOL2 BOOLEAN:= FALSE;
BEGIN

RESULT:= NUM1 + NUM2;
MOD_RESULT:= NUM1 MOD NUM2;

DBMS_OUTPUT.PUT_LINE('NUM1 = ' || NUM1);
DBMS_OUTPUT.PUT_LINE('NUM2 = ' || NUM2);
DBMS_OUTPUT.PUT_LINE('RESULT = ' || RESULT);
DBMS_OUTPUT.PUT_LINE('MOD_RESULT = ' || MOD_RESULT);
DBMS_OUTPUT.PUT_LINE('NUM3 = ' || NUM3);
DBMS_OUTPUT.PUT_LINE('NUM4 = ' || NUM4);
DBMS_OUTPUT.PUT_LINE('NUM5 = ' || NUM5);
DBMS_OUTPUT.PUT_LINE('NUM6 = ' || NUM6);
DBMS_OUTPUT.PUT_LINE('NUM7 = ' || NUM7);
DBMS_OUTPUT.PUT_LINE('NUM8 = ' || NUM8);
DBMS_OUTPUT.PUT_LINE('NUM9 = ' || NUM9);
DBMS_OUTPUT.PUT_LINE('NUM10 = ' || NUM10);
DBMS_OUTPUT.PUT_LINE('NUM11 = ' || NUM11);
DBMS_OUTPUT.PUT_LINE('NUM12 = ' || NUM12);
IF BOOL1 THEN DBMS_OUTPUT.PUT_LINE('BOOL1 = ' || 'TRUE'); END IF;
IF NOT BOOL1 THEN DBMS_OUTPUT.PUT_LINE('BOOL1 = ' || 'FALSE'); END IF;
IF BOOL2 THEN DBMS_OUTPUT.PUT_LINE('BOOL2 = ' || 'TRUE'); END IF;
IF NOT BOOL2 THEN DBMS_OUTPUT.PUT_LINE('BOOL2 = ' || 'FALSE'); END IF;

END;

--6
DECLARE
    NAME_PERSON VARCHAR2(20):= 'DANIK';
    AGE_PERSON CONSTANT NUMBER:= 19;
    GENDER_PERSON CHAR(1):= 'M';
BEGIN

DBMS_OUTPUT.PUT_LINE('NAME_PERSON = ' || NAME_PERSON);
DBMS_OUTOUT.PUT_LINE('AGE_PERSON: ' || AGE_PERSON);
DBMS_OUTPUT.PUT_LINE('GENDER_PERSON: ' || GENDER_PERSON);

AGE_PERSON:= 20;

EXCEPTION WHEN OTHERS
THEN DBMS_OUTPUT.PUT_LINE('ERROR = '|| AGE_PERSON);
END;

--7,8
DECLARE
    SUBJECT SYS.SUBJECT.SUBJECT%type;
    FACULTY SYS.FACULTY%rowtype;

BEGIN

SUBJECT:= 'OX';
FACULTY.FACULTY:= 'ТОВ';
FACULTY.FACULTY_NAME:= 'Технология органических веществ';
DBMS_OUTPUT.PUT_LINE(SUBJECT);
DBMS_OUTPUT.PUT_LINE(rtrim(FACULTY.FACULTY) || ':' || FACULTY.FACULTY_NAME);

EXCEPTION
    WHEN OTHERS
        THEN DBMS_OUTPUT.PUT_LINE('ERROR = ' || sqlerrm);
        
END;

--9
DECLARE 
    X NUMBER := 10;

BEGIN

IF 20 > X
THEN 
DBMS_OUTPUT.PUT_LINE('20 > '|| X);
ELSIF 20 = X
THEN
DBMS_OUTPUT.PUT_LINE('20 = '|| X);
ELSE 
DBMS_OUTPUT.PUT_LINE('20 < '|| X);
END IF;

END;

--10
DECLARE
    X NUMBER := 19;

BEGIN

CASE X
WHEN 1 THEN DBMS_OUTPUT.PUT_LINE('1');
WHEN 2 THEN DBMS_OUTPUT.PUT_LINE('2');
WHEN 3 THEN DBMS_OUTPUT.PUT_LINE('3');
ELSE DBMS_OUTPUT.PUT_LINE('ELSE');
END CASE;

CASE 
WHEN 8 > X THEN DBMS_OUTPUT.PUT_LINE('1 > '||X);
WHEN 8 = X THEN DBMS_OUTPUT.PUT_LINE('1 = '||X);
WHEN 12 = X THEN DBMS_OUTPUT.PUT_LINE('12 = '||X);
WHEN X BETWEEN 13 AND 20 THEN DBMS_OUTPUT.PUT_LINE('13 <= ' ||X|| ' <= 20');
ELSE DBMS_OUTPUT.PUT_LINE('ELSE');
END CASE;

END;

--11, 12, 13
DECLARE 
    X NUMBER := 0;

BEGIN

LOOP
X := X + 1;
DBMS_OUTPUT.PUT_LINE(X);
EXIT WHEN X > 5;
END LOOP;

FOR N IN  1..5
LOOP
DBMS_OUTPUT.PUT_LINE(X);
END LOOP;

WHILE (X > 0)
LOOP
X := X - 1;
DBMS_OUTPUT.PUT_LINE(X);
END LOOP;

END;

CREATE TABLE AUDITORIUM_TYPE(
AUDITORIUM_TYPE CHAR(10) NULL,
AUDITORIUM_TYPENAME VARCHAR(30) NOT NULL,
CONSTRAINT PK_AUDITORIUM_TYPE PRIMARY KEY(AUDITORIUM_TYPE)
);

INSERT INTO AUDITORIUM_TYPE(AUDITORIUM_TYPE,AUDITORIUM_TYPENAME)
VALUES('ЛБ-Х', 'Химическая лаборатория');
INSERT INTO AUDITORIUM_TYPE(AUDITORIUM_TYPE,AUDITORIUM_TYPENAME)
VALUES('ЛБ-К', 'Компьютерный класс');
INSERT INTO AUDITORIUM_TYPE(AUDITORIUM_TYPE,AUDITORIUM_TYPENAME)
VALUES('ЛБ-СК', 'Спец. компьютерный класс');
INSERT INTO AUDITORIUM_TYPE(AUDITORIUM_TYPE,AUDITORIUM_TYPENAME)
VALUES('ЛК-К', 'Лекционная с уст. проектором');

SELECT * FROM AUDITORIUM_TYPE;

CREATE TABLE AUDITORIUM(
AUDITORIUM CHAR(20) NULL,
AUDITORIUM_NAME VARCHAR(50) NOT NULL,
AUDITORIUM_CAPACITY NUMBER NOT NULL,
AUDITORIUM_TYPE CHAR(10) NOT NULL,
CONSTRAINT PK_AUDITORIUM PRIMARY KEY(AUDITORIUM),
CONSTRAINT FK_AUDITORIUM FOREIGN KEY(AUDITORIUM_TYPE) REFERENCES AUDITORIUM_TYPE(AUDITORIUM_TYPE)
);

INSERT INTO AUDITORIUM(AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_CAPACITY, AUDITORIUM_TYPE)
VALUES('206-1', '206-1', 15, 'ЛБ-К');
INSERT INTO AUDITORIUM(AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_CAPACITY, AUDITORIUM_TYPE)
VALUES('236-1', '236-1', 60, 'ЛК-К');
INSERT INTO AUDITORIUM(AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_CAPACITY, AUDITORIUM_TYPE)
VALUES('301-1', '301-1', 50, 'ЛБ-Х');
INSERT INTO AUDITORIUM(AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_CAPACITY, AUDITORIUM_TYPE)
VALUES('313-1', '313-1', 70, 'ЛБ-СК');

SELECT * FROM AUDITORIUM;

CREATE TABLE FACULTY(
FACULTY CHAR(10) NULL,
FACULTY_NAME VARCHAR(50),
CONSTRAINT PK_FACULTY PRIMARY KEY(FACULTY)
);

INSERT INTO FACULTY(FACULTY,FACULTY_NAME) 
VALUES ('ИТ', 'Факультет информационных технологий');
INSERT INTO FACULTY(FACULTY,FACULTY_NAME) 
VALUES ('ИЭФ', 'Инженерно-экономический факультет');
INSERT INTO FACULTY(FACULTY,FACULTY_NAME) 
VALUES ('ЛХФ', 'Лесохозяйственный факультет');
INSERT INTO FACULTY(FACULTY,FACULTY_NAME) 
VALUES ('ТОВ', 'Технология органических веществ');

SELECT * FROM FACULTY;

CREATE TABLE PULPIT(
PULPIT CHAR(20) NULL,
PULPIT_NAME VARCHAR(100) NOT NULL,
FACULTY CHAR(10) NOT NULL,
CONSTRAINT PK_PULPIT PRIMARY KEY(PULPIT, PULPIT_NAME),
CONSTRAINT FK_PULPIT FOREIGN KEY(FACULTY) REFERENCES FACULTY(FACULTY)
);

INSERT INTO PULPIT(PULPIT, PULPIT_NAME, FACULTY)
VALUES('ИСиТ', 'Информационных систем и технологий', 'ИТ');
INSERT INTO PULPIT(PULPIT, PULPIT_NAME, FACULTY)
VALUES('ЛВ', 'Лесоводства', 'ЛХФ');
INSERT INTO PULPIT(PULPIT, PULPIT_NAME, FACULTY)
VALUES('ОХ', 'Органической химии', 'ТОВ');
INSERT INTO PULPIT(PULPIT, PULPIT_NAME, FACULTY)
VALUES('ЭТиМ', 'Экономической теории и маркетинга', 'ИЭФ');

SELECT * FROM PULPIT;

CREATE TABLE TEACHER(
TEACHER CHAR(10) NULL,
TEACHER_NAME VARCHAR(100) NOT NULL,
PULPIT CHAR(20) NOT NULL,
PULPIT_NAME VARCHAR(100) NOT NULL,
CONSTRAINT PK_TEACHER PRIMARY KEY(TEACHER),
CONSTRAINT FK_TEACHER FOREIGN KEY(PULPIT, PULPIT_NAME) REFERENCES PULPIT(PULPIT,PULPIT_NAME)
);

INSERT INTO TEACHER(TEACHER, TEACHER_NAME, PULPIT, PULPIT_NAME)
VALUES('АКНВЧ', 'Акунович Станислав Иванович', 'ИСиТ', 'Информационных систем и технологий');
INSERT INTO TEACHER(TEACHER, TEACHER_NAME, PULPIT, PULPIT_NAME)
VALUES('РЖК', 'Рожков Леонид Николаевич', 'ЛВ', 'Лесоводства');
INSERT INTO TEACHER(TEACHER, TEACHER_NAME, PULPIT, PULPIT_NAME)
VALUES('БЗБРДВ', 'Безбородов Владимир Степанович', 'ОХ', 'Органической химии');
INSERT INTO TEACHER(TEACHER, TEACHER_NAME, PULPIT, PULPIT_NAME)
VALUES('БРНВСК', 'Барановский Станислав Иванович', 'ЭТиМ', 'Экономической теории и маркетинга');

SELECT * FROM TEACHER;

CREATE TABLE SUBJECT(
SUBJECT CHAR(10) NULL,
SUBJECT_NAME VARCHAR(100) NOT NULL,
PULPIT CHAR(20) NOT NULL,
PULPIT_NAME VARCHAR(100) NOT NULL,
CONSTRAINT PK_SUBJECT PRIMARY KEY(SUBJECT),
CONSTRAINT FK_SUBJECT FOREIGN KEY(PULPIT, PULPIT_NAME) REFERENCES PULPIT(PULPIT,PULPIT_NAME)
);

INSERT INTO SUBJECT(SUBJECT, SUBJECT_NAME, PULPIT, PULPIT_NAME)
VALUES ('БД', 'Базы данных', 'ИСиТ', 'Информационных систем и технологий');
INSERT INTO SUBJECT(SUBJECT, SUBJECT_NAME, PULPIT, PULPIT_NAME)
VALUES ('ИГ', 'Инженерная геодезия ', 'ЛВ', 'Лесоводства');
INSERT INTO SUBJECT(SUBJECT, SUBJECT_NAME, PULPIT, PULPIT_NAME)
VALUES ('ОХ', 'Органическая химия', 'ОХ', 'Органической химии');
INSERT INTO SUBJECT(SUBJECT, SUBJECT_NAME, PULPIT, PULPIT_NAME)
VALUES ('ЭТ', 'Экономическая теория', 'ЭТиМ', 'Экономической теории и маркетинга');

SELECT * FROM SUBJECT;